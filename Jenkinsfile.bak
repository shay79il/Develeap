pipeline { 
    agent any

    environment {
        IMAGE_NAME = "develeap"
        IMAGE_REPO = "public.ecr.aws/q1c0q0c4"
        VERSION = "${env.BUILD_NUMBER}"
    }

    stages {
        stage ('(1) Git clone') {
            steps {
                git branch: 'main', url: 'https://github.com/shay79il/DeveleapCI'
            }
        }
        stage ('(2) Build image') {
            steps {
                sh 'cd app'
                sh 'docker build -t develeap .'
                sh 'docker tag ${IMAGE_NAME}:latest ${IMAGE_REPO}/${IMAGE_NAME}:${VERSION}'
                sh 'cd -'
            }
        }
    }

    post {
        success {
            echo "${env.BUILD_URL}"
            echo "======= BUILD SUCCESS =======\n======= BUILD SUCCESS =======\n======= BUILD SUCCESS =======\n"

            stage ('(3) Push image to AWS ECR'){
                steps {
                    sh 'aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/q1c0q0c4'

                    sh 'docker push ${IMAGE_REPO}/${IMAGE_NAME}:${VERSION}'
                }
            }
            
            stage ('(4) Clone/Pull K8S repo'){
                steps {
                    script{
                        if(fileExists('DeveleapGitops')) {
                            echo 'Cloned repo already exist - Pulling latest changes'

                            dir("DeveleapGitops") {
                                sh 'git pull'
                            }

                        } else {
                            echo 'Repo does NOT exist - Cloning the repo'
                            git branch: 'feature', url: 'https://github.com/shay79il/DeveleapGitops'
                        }

                    }
                }
            }

            stage ('(5) Update Manifest'){
                steps {
                    dir("DeveleapGitops/jenkins-demo"){
                        sh 'sed -i "s#${IMAGE_REPO}.*#${IMAGE_REPO}/${IMAGE_NAME}:${VERSION}#g" deployment.yaml'
                        sh 'grep "image" deployment.yaml'
                    }
                }
            }

            stage ('(6) Commit & Push'){
                steps {
                    dir("DeveleapGitops/jenkins-demo"){
                        sh "git config --global user.email 'jenkins@ci.com'"
                        sh 'git remote set-url origin https://github.com/shay79il/DeveleapGitops'
                        sh 'git checkout feature'
                        sh 'git add -A'
                        sh 'git commit -am "Updated image version for build - ${VERSION}"'
                        sh 'git push origin feature'
                        sh 'gh pr create --base main --head feature --title "Updated image version for build - ${VERSION}"'
                    }
                }
            }

            stage ('(7) Raise PR'){
                steps {
                    dir("DeveleapGitops/jenkins-demo"){
                        sh 'gh pr create --base main --head feature --title "Updated image version for build - ${VERSION}"'
                    }
                }
            }
        }

        failure {
            echo "${env.BUILD_URL}"
            echo "======= FAIL !!! =======\n======= FAIL !!! =======\n======= FAIL !!! =======\n"
            echo "======= Build docker image FAILED!!! =======\n"
        }
    }
}